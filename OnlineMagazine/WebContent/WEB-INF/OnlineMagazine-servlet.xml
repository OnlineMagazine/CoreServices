<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
   http://www.springframework.org/schema/beans/spring-beans.xsd
   http://www.springframework.org/schema/context 
   http://www.springframework.org/schema/context/spring-context.xsd
   http://www.springframework.org/schema/mvc
   http://www.springframework.org/schema/mvc/spring-mvc.xsd
   http://www.springframework.org/schema/tx 
   http://www.springframework.org/schema/tx/spring-tx.xsd
   http://www.springframework.org/schema/cache 
   http://www.springframework.org/schema/cache/spring-cache.xsd
   http://www.springframework.org/schema/aop
   http://www.springframework.org/schema/aop/spring-aop.xsd 
   http://www.springframework.org/schema/util
   http://www.springframework.org/schema/util/spring-util-3.1.xsd
   http://www.springframework.org/schema/security
   http://www.springframework.org/schema/security/spring-security.xsd
   http://www.springframework.org/schema/task 
   http://www.springframework.org/schema/task/spring-task.xsd" default-lazy-init="true">
   
   <context:component-scan base-package="koontal.magazine.com.*" />
   <context:property-placeholder
		location="classpath:koontal/magazine/com/resources/hibernate-config/config_hibernate_${spring.profiles.active}.properties" />
   
   <mvc:annotation-driven /> 
	<task:annotation-driven />
	<context:annotation-config />
	
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- <cache:annotation-driven/> -->
	<!-- <util:properties id="queries" location="classpath:org/tcs/com/resources/queries.properties"/> -->
	
	

	<!--===== AspectJ Logging ===== -->
	<!-- <bean id="aspectLogging" class="org.tcs.com.util.AspectLogging" /> -->
	<!--====== AspectJ Validate Permission ==========-->
	<!-- <bean id="aspectValidatePermission" class="org.tcs.com.util.AspectValidatePermission" /> -->

	<!--===== Data Source ===== -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close" p:driverClassName="${jdbc.driverClassName}"
		p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

	<!-- This will ensure that hibernate exceptions are automatically translated 
		into Spring's generic DataAccessException hierarchy for those classes annotated 
		with Repository -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<!--===== Session Factory ===== -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:koontal/magazine/com/resources/hibernate-config/Hibernate.cfg.xml
			</value>
		</property>
	</bean>

	<tx:annotation-driven />

	<!--===== Transaction Manager ===== -->    
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- use declarative transaction management -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- ======== MultipartFile Upload Bean Definition======= -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- JMX for logging monitoring at tomcat container level -->
	<bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"/>
	<!-- <bean id="exporter" class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
 		<property name="beans">
    	<map>
  			<entry key="bean:name=log4jLevelChanger" value-ref="Log4jLevelChanger" />
    	</map>	
 		</property>
 		<property name="server" ref="mbeanServer"/>
  	</bean> -->

  	<!-- <bean id="Log4jLevelChanger" class="org.tcs.com.logging.Log4jLevelChanger"/> -->
 	<!-- <bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="suffix" value=".html" />
	</bean> -->
 	
 	<!-- If no extension matched, use JSP view -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	    <property name="order" value="2" />
		<property name="prefix"><value>/jsp/</value></property>
		<property name="suffix"><value>.jsp</value></property>
	</bean>
 	</beans>